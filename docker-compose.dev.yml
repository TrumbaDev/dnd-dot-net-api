services:
  postgres:
    image: postgres:15
    container_name: dnd_db
    environment:
      POSTGRES_DB: dnd_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: dnd_dotnet_api
    working_dir: /src
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=dnd_db;Username=root;Password=password
      - DOTNET_USE_POLLING_FILE_WATCHER=1
    volumes:
      - .:/src
      - ~/.nuget/packages:/root/.nuget/packages
      - ./bin:/src/bin
      - ./obj:/src/obj
    command: >
      sh -c "dotnet restore &&
             dotnet watch run --urls=http://0.0.0.0:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
